/*The MIT License (MIT)

Copyright (c) 2014 Cory Beams

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

*/
var LE={};LE.Lights={POINT_LIGHT:"PointLight",DIRECTIONAL_LIGHT:"DirectionalLight",RADIAL_POINT_LIGHT:"RadialPointLight"},LE.LightShaders={POINT_LIGHT:0,POINT_LIGHT2:1,RADIAL_POINT_LIGHT:2};
LE.Polygon=function(t,i,e,s,r){this.x=t,this.y=i,this._rotation=e,this.vertices=s.vertices,this.renderVerts=s.renderVerts,this.centerPoint=LE.Utilities.centerOfVerts(this.vertices),this.colour=r},LE.Polygon.prototype={get rotation(){return this._rotation},set rotation(t){var i=Math.abs(this._rotation-t);this._rotation=t;for(var e=LE.Utilities.degToRad(i),s=0;s<this.vertices.length;s++){var r=this.vertices[s].x,o=this.vertices[s].y,n=this.centerPoint.x,h=this.centerPoint.y,c=Math.cos(e)*(r-n)-Math.sin(e)*(o-h)+n,a=Math.sin(e)*(r-n)+Math.cos(e)*(o-h)+h;this.vertices[s].x=c,this.vertices[s].y=a}}};
LE.Texture=function(t,e,i,s,r){this.x=t,this.y=e,this._rotation=i,this.vertices=s.vertices,this.renderVerts=s.renderVerts,this.centerPoint=LE.Utilities.centerOfVerts(this.vertices),this.textureURL=r},LE.Texture.prototype={get rotation(){return this._rotation},set rotation(t){var e=Math.abs(this._rotation-t);this._rotation=t;for(var i=LE.Utilities.degToRad(e),s=0;s<this.vertices.length;s++){var r=this.vertices[s].x,h=this.vertices[s].y,n=this.centerPoint.x,o=this.centerPoint.y,c=Math.cos(i)*(r-n)-Math.sin(i)*(h-o)+n,a=Math.sin(i)*(r-n)+Math.cos(i)*(h-o)+o;this.vertices[s].x=c,this.vertices[s].y=a}}};
LE.Colour=function(i,t,h,s){this.r=i,this.g=t,this.b=h,this.a=s};
LE.Vertices={square:function(e){var r=[{x:0,y:0},{x:0,y:e},{x:e,y:e},{x:e,y:0}],t=JSON.parse(JSON.stringify(r));return{vertices:r,renderVerts:t}},rectangle:function(e,r){var t=[{x:0,y:0},{x:0,y:r},{x:e,y:r},{x:e,y:0}],s=JSON.parse(JSON.stringify(t));return{vertices:t,renderVerts:s}},rhombus:function(e,r){var t=[{x:0,y:0}];t.push({x:Math.sin(LE.Utilities.degToRad(r))*e,y:Math.cos(LE.Utilities.degToRad(r))*e}),t.push({x:t[1].x+e,y:t[1].y}),t.push({x:t[0].x+e,y:t[0].y});var s=JSON.parse(JSON.stringify(t));return{vertices:t,renderVerts:s}},parallelogram:function(e,r,t){var s=[{x:0,y:0}];s.push({x:Math.sin(LE.Utilities.degToRad(t))*e,y:Math.cos(LE.Utilities.degToRad(t))*r}),s.push({x:s[1].x+e,y:s[1].y}),s.push({x:s[0].x+e,y:s[0].y});var i=JSON.parse(JSON.stringify(s));return{vertices:s,renderVerts:i}},trapezium:function(){},trapezoid:function(){},kite:function(){},regularPolygon:function(e,r){3>r&&console.error("A regular polygon cannot have less than 3 vertices.");for(var t=[],s=[],i=0;r>i;i++)t.push({x:Math.sin(i/r*2*Math.PI)*e/2,y:Math.cos(i/r*2*Math.PI)*e/2}),s.push({x:Math.sin(i/r*2*Math.PI)*e/2,y:Math.cos(i/r*2*Math.PI)*e/2}),r>4&&i%3==0&&(t.push({x:0,y:0}),s.push({x:0,y:0}));t.length>=7&&t.length%4==0&&s.push({x:0,y:0});for(var n=LE.Utilities.sizeFromVerts(t),i=0;i<t.length;i++)t[i].x+=n.width/2,t[i].y+=n.height/2;for(var i=0;i<s.length;i++)s[i].x+=n.width/2,s[i].y+=n.height/2;return{vertices:t,renderVerts:s}}};
LE.ColourSpectrum=function(){this.colours=[];for(var o=255,r=o,s=0,u=0,s=0;o>=s;s++)this.colours.push(new LE.Colour(r,s,u,255));for(var r=o;r>=0;r--)this.colours.push(new LE.Colour(r,s,u,255));for(var u=0;o>=u;u++,s--)this.colours.push(new LE.Colour(r,s,u,255));for(var t=0;o>=t;t++,u--,r++)this.colours.push(new LE.Colour(r,s,u,255));this.random=function(){return this.colours[Math.floor(Math.random()*this.colours.length)]},this.get=function(o){return o>this.colours.length||0>o?void console.error("Index exceeds colour range"):this.colours[o]}};
LE.Utilities={toMatrix:function(t,i,r){return 1==r?i/t.viewportWidth*t.viewportRatio*2:i/t.viewportHeight*2},vertToMatrix:function(t,i,r){return verts={x:i/t.viewportWidth*t.viewportRatio*2,y:r/t.viewportHeight*2}},checkScreenBounds:function(t,i,r,e,n,o,h,a){return h>=t-n&&t+r+n>=h&&a>=i-o&&i+e+o>=a?!0:!1},degToRad:function(t){return t*Math.PI/180},minMaxFromVerts:function(t){for(var i=0,r=0,e=0,n=0,o=0;o<t.length;o++)0==o?(i=t[o].x,r=t[o].x,e=t[o].y,n=t[o].y):(i=t[o].x<i?t[o].x:i,r=t[o].x>r?t[o].x:r,e=t[o].y<e?t[o].y:e,n=t[o].y>n?t[o].y:n);return{minWidth:i,maxWidth:r,minHeight:e,maxHeight:n}},sizeFromVerts:function(t){var i=this.minMaxFromVerts(t);return{width:Math.abs(i.maxWidth-i.minWidth),height:Math.abs(i.maxHeight-i.minHeight)}},centerOfVerts:function(t){for(var i=0,r=0,e=0;e<t.length;e++)i+=t[e].x,r+=t[e].y;return i/=t.length,r/=t.length,{x:i,y:r}},checkPointCollision:function(t,i,r){function e(t,i,r,e,n){for(var o,h,a=0,o=0,h=t-1;t>o;h=o++)r[o]>n!=r[h]>n&&e<(i[h]-i[o])*(n-r[o])/(r[h]-r[o])+i[o]&&(a=!a);return a}for(var n=r.vertices.length,o=[],h=[],a=0;n>a;a++)o.push(r.x+r.vertices[a].x),h.push(r.y+r.vertices[a].y);var u=e(n,o,h,t,i);return 1==u?!0:!1}};
LE.Vector2={sub:function(n,r){var t={x:n.x-r.x,y:n.y-r.y};return t},add:function(n,r){var t={x:n.x+r.x,y:n.y+r.y};return t},dot:function(n,r){return n.x*r.x+n.y*r.y},equal:function(n,r){return n.x==r.x&&n.y==r.y?!0:!1},scale:function(n,r){var t={x:r.x*n,y:r.y*n};return t}};
LE.AmbientLight=function(i){this.colour=i};
LE.DirectionalLight=function(t){null==t&&(t={}),this.type=LE.Lights.DIRECTIONAL_LIGHT,this.x=t.x||0,this.y=t.y||0,this.rotation=t.rotation||0,this.range=t.range||90,this.colour=t.colour||new LE.Colour(255,255,255,255),this.intensity=t.intensity||.1,this.shader=t.shader||LE.LightShaders.POINT_LIGHT,(this.intensity>1||this.intensity<0)&&console.error("Light intensity cannot be higher than 1.0 or less than 0.0.")};
LE.PointLight=function(t){null==t&&(t={}),this.type=LE.Lights.POINT_LIGHT,this.x=t.x||0,this.y=t.y||0,this.colour=t.colour||new LE.Colour(255,255,255,255),this.intensity=t.intensity||.1,this.shader=t.shader||LE.LightShaders.POINT_LIGHT,(this.intensity>1||this.intensity<0)&&console.error("Light intensity cannot be higher than 1.0 or less than 0.0.")};
LE.RadialPointLight=function(i){null==i&&(i={}),this.type=LE.Lights.RADIAL_POINT_LIGHT,this.x=i.x||0,this.y=i.y||0,this.radius=i.radius||200,this.colour=i.colour||new LE.Colour(255,255,255,255),this.intensity=i.intensity||.1,this.shader=i.shader||LE.LightShaders.RADIAL_POINT_LIGHT,(this.intensity>1||this.intensity<0)&&console.error("Light intensity cannot be higher than 1.0 or less than 0.0.")};
LE.Shader=function(e,t){this.name=e,this.program=t},LE.Shaders=function(){this.selected,this.list=[]},LE.Shaders.prototype.setCurrentShader=function(e,t){e.useProgram(t),this.selected=t},LE.Shaders.prototype.getShaderFromHTML=function(e,t){var r=document.getElementById(t);if(!r)return null;for(var a="",o=r.firstChild;o;)3==o.nodeType&&(a+=o.textContent),o=o.nextSibling;var i;if("x-shader/x-fragment"==r.type)i=e.createShader(this.gl.FRAGMENT_SHADER);else{if("x-shader/x-vertex"!=r.type)return null;i=e.createShader(this.gl.VERTEX_SHADER)}return e.shaderSource(i,a),e.compileShader(i),e.getShaderParameter(i,e.COMPILE_STATUS)?i:(alert(e.getShaderInfoLog(i)),null)},LE.Shaders.prototype.getShaderFromVar=function(e,t,r){var a;if("Vert"==r||"Vertex"==r||"VertexShader"==r)a=e.createShader(e.VERTEX_SHADER);else{if("Frag"!=r&&"Fragment"!=r&&"FragmentShader"!=r)return void console.log("Error: Cannot get shader. Invalid type provided.");a=e.createShader(e.FRAGMENT_SHADER)}return e.shaderSource(a,t),e.compileShader(a),e.getShaderParameter(a,e.COMPILE_STATUS)?a:(alert(e.getShaderInfoLog(a)),null)},LE.Shaders.prototype.createShader=function(e,t,r,a){var o=e.createProgram();return e.attachShader(o,r),e.attachShader(o,a),e.linkProgram(o),e.getProgramParameter(o,e.LINK_STATUS)||alert("Could not initialise shader: "+o),e.useProgram(o),1==t?this.enableTextureShaderAttribs(e,o):this.enableRegularShaderAttribs(e,o),o.pMatrixUniform=e.getUniformLocation(o,"uPMatrix"),o.mvMatrixUniform=e.getUniformLocation(o,"uMVMatrix"),o},LE.Shaders.prototype.enableRegularShaderAttribs=function(e,t){t.vertexPositionAttribute=e.getAttribLocation(t,"aVertexPosition"),e.enableVertexAttribArray(t.vertexPositionAttribute),t.vertexColorAttribute=e.getAttribLocation(t,"aVertexColor"),e.enableVertexAttribArray(t.vertexColorAttribute)},LE.Shaders.prototype.enableTextureShaderAttribs=function(e,t){t.vertexPositionAttribute=e.getAttribLocation(t,"aVertexPosition"),e.enableVertexAttribArray(t.vertexPositionAttribute),t.textureCoordAttribute=e.getAttribLocation(t,"aTextureCoord"),e.enableVertexAttribArray(t.textureCoordAttribute)};
LE.ShaderLib={POINT_LIGHT_FRAG:"precision mediump float;uniform vec2 lightLocation;uniform vec3 lightColor;void main() {float distance = length(lightLocation - gl_FragCoord.xy);float attenuation = 1.0 / distance;vec4 color = vec4(attenuation, attenuation, attenuation, pow(attenuation, 3.0)) * vec4(lightColor, 1);gl_FragColor = color;}",POINT_LIGHT_FRAG2:"precision mediump float;uniform vec2 lightLocation;uniform vec3 lightColor;void main() {float distance = length(lightLocation - gl_FragCoord.xy);float attenuation = 1.0 / (1.0 + 0.1*distance + 0.01*distance*distance);vec4 color = vec4(attenuation, attenuation, attenuation, pow(attenuation, 3.0)) * vec4(lightColor, 1);gl_FragColor = color;}",MAIN_VERT:"attribute vec3 aVertexPosition;attribute vec4 aVertexColor;uniform mat4 uMVMatrix;uniform mat4 uPMatrix;varying vec4 vColor;void main(void) {gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);vColor = aVertexColor;}",RADIAL_LIGHT_FRAG:"precision mediump float;uniform vec2 lightLocation;uniform vec3 lightColor;uniform float radius;void main() {float distance  = length( lightLocation - gl_FragCoord.xy );float intensity = 1.0 - min( distance, radius ) / radius;gl_FragColor = vec4(intensity, intensity, intensity, 0.1) * vec4(lightColor.r / 10.0, lightColor.g / 10.0, lightColor.b / 10.0, 1);}",COLOUR_FRAG:"precision mediump float;uniform vec4 ambientLight;varying vec4 vColor;void main(void) {gl_FragColor = ambientLight * vColor;}",TEXTURE_FRAG:"precision mediump float;varying vec2 vTextureCoord;uniform vec4 ambientLight;uniform sampler2D uSampler;void main(void) {gl_FragColor = ambientLight * texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));}",TEXTURE_VERT:"attribute vec3 aVertexPosition;attribute vec2 aTextureCoord;uniform mat4 uMVMatrix;uniform mat4 uPMatrix;varying vec2 vTextureCoord;void main(void) {gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);vTextureCoord = aTextureCoord;}"};
LE.OrthographicCamera=function(t,a){this.x=t,this.y=a,this.mvMatrix=mat4.create(),this.pMatrix=mat4.create(),this.mvMatrixStack=[]},LE.OrthographicCamera.prototype.ortho=function(t,a,r,i,o,h){mat4.ortho(this.pMatrix,t,a,r,i,o,h)},LE.OrthographicCamera.prototype.identity=function(t){mat4.identity(t)},LE.OrthographicCamera.prototype.translate=function(t,a,r){mat4.translate(this.mvMatrix,this.mvMatrix,[t,a,r])},LE.OrthographicCamera.prototype.rotate=function(t,a,r,i){mat4.rotate(this.mvMatrix,this.mvMatrix,t,[a,r,i])},LE.OrthographicCamera.prototype.mvPushMatrix=function(){var t=mat4.create();mat4.copy(t,this.mvMatrix),this.mvMatrixStack.push(t)},LE.OrthographicCamera.prototype.mvPopMatrix=function(){if(0==this.mvMatrixStack.length)throw"Invalid popMatrix!";this.mvMatrix=this.mvMatrixStack.pop()};
LE.WebGLRenderer=function(t){null==t&&console.error("To create a WebGLRenderer a canvas needs to be provided."),this.gl,this.canvas=t.canvas,this._scene=t.scene||new LE.Scene,this._camera=t.camera||new LE.OrthographicCamera(0,0),this.shaders=new LE.Shaders,this.initGL(),this.initShaders(),this.prepareGL()},LE.WebGLRenderer.prototype={get scene(){return this._scene},set scene(t){t instanceof LE.Scene?(this._scene=t,null!=this.gl&&this._scene.init(this.gl)):console.warn("Object is not of type LE.Scene!")},get camera(){return this._camera},set camera(t){t instanceof LE.OrthographicCamera?(this._camera=t,null!=this.gl&&(this._camera.ortho(-this.gl.viewportRatio,this.gl.viewportRatio,-1,1,.1,100),this._camera.translate(-this.gl.viewportRatio,-1,-1))):console.warn("Object is not of type LE.OrthographicCamera!")}},LE.WebGLRenderer.prototype.initGL=function(){try{this.gl=this.canvas.getContext("experimental-webgl",{stencil:!0}),this.gl.viewportWidth=canvas.width,this.gl.viewportHeight=canvas.height,this.gl.viewportRatio=canvas.width/canvas.height,null!=this.scene&&this.scene.init(this.gl)}catch(t){}this.gl||alert("Could not initialise WebGL, sorry :-( ")},LE.WebGLRenderer.prototype.initShaders=function(){var t=this.shaders.getShaderFromVar(this.gl,LE.ShaderLib.POINT_LIGHT_FRAG,"Frag"),e=this.shaders.getShaderFromVar(this.gl,LE.ShaderLib.POINT_LIGHT_FRAG2,"Frag"),s=this.shaders.getShaderFromVar(this.gl,LE.ShaderLib.MAIN_VERT,"Vert"),i=this.shaders.getShaderFromVar(this.gl,LE.ShaderLib.RADIAL_LIGHT_FRAG,"Frag"),h=this.shaders.getShaderFromVar(this.gl,LE.ShaderLib.COLOUR_FRAG,"Frag"),r=this.shaders.getShaderFromVar(this.gl,LE.ShaderLib.TEXTURE_FRAG,"Frag"),a=this.shaders.getShaderFromVar(this.gl,LE.ShaderLib.TEXTURE_VERT,"Vert");this.shaders.list.push(new LE.Shader("PrimaryPointLightShader",this.shaders.createShader(this.gl,!1,s,t))),this.shaders.list.push(new LE.Shader("SecondaryPointLightShader",this.shaders.createShader(this.gl,!1,s,e))),this.shaders.list.push(new LE.Shader("RadialPointLightShader",this.shaders.createShader(this.gl,!1,s,i))),this.shaders.list.push(new LE.Shader("PolygonShader",this.shaders.createShader(this.gl,!1,s,h))),this.shaders.list.push(new LE.Shader("TextureShader",this.shaders.createShader(this.gl,!0,a,r))),this.shaders.setCurrentShader(this.gl,this.shaders.list[0].program)},LE.WebGLRenderer.prototype.prepareGL=function(){this.gl.clearColor(0,0,0,1),this.gl.viewport(0,0,this.gl.viewportWidth,this.gl.viewportHeight),this.camera.ortho(-this.gl.viewportRatio,this.gl.viewportRatio,-1,1,.1,100),this.camera.identity(this.camera.mvMatrix),this.camera.translate(-this.gl.viewportRatio,-1,-1),this.gl.enable(this.gl.DEPTH_TEST),this.gl.frontFace(this.gl.CW),this.gl.enable(this.gl.STENCIL_TEST)},LE.WebGLRenderer.prototype.setMatrixUniforms=function(t){this.gl.uniformMatrix4fv(t.pMatrixUniform,!1,this.camera.pMatrix),this.gl.uniformMatrix4fv(t.mvMatrixUniform,!1,this.camera.mvMatrix)},LE.WebGLRenderer.prototype.setClearColour=function(t,e,s,i){this.gl.clearColor(t/255,e/255,s/255,i/255)},LE.WebGLRenderer.prototype.clear=function(){this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)},LE.WebGLRenderer.prototype.translate=function(t,e,s){this.camera.translate(LE.Utilities.toMatrix(this.gl,t,!0),LE.Utilities.toMatrix(this.gl,e,!1),0)},LE.WebGLRenderer.prototype.resize=function(t,e){(t!=canvas.width||e!=canvas.height)&&(canvas.width=t,canvas.height=e,this.camera.translate(+this.gl.viewportRatio,1,1),this.gl.viewportWidth=t,this.gl.viewportHeight=e,this.gl.viewportRatio=t/e,this.gl.viewport(0,0,this.gl.viewportWidth,this.gl.viewportHeight),this.camera.ortho(-this.gl.viewportRatio,this.gl.viewportRatio,-1,1,.1,100),this.camera.translate(-this.gl.viewportRatio,-1,-1),this.scene.initBuffers())},LE.WebGLRenderer.prototype.render=function(){this.renderObjects(),this.renderShadowObjects(),this.renderLightsAndShadows()},LE.WebGLRenderer.prototype.renderObjects=function(){this.translate(-this.camera.x,-this.camera.y),this.gl.bindTexture(this.gl.TEXTURE_2D,null);for(var t=0;t<this.scene.objects.length;t++){var e=LE.Utilities.sizeFromVerts(this.scene.objects[t].vertices);LE.Utilities.checkScreenBounds(this.camera.x,this.camera.y,this.gl.viewportWidth,this.gl.viewportHeight,e.width,e.height,this.scene.objects[t].x,this.scene.objects[t].y)&&(this.scene.objects[t]instanceof LE.Texture?this.renderTextureObject(this.scene.objects,t):this.renderObject(this.scene.objects,t))}this.translate(this.camera.x,this.camera.y)},LE.WebGLRenderer.prototype.renderShadowObjects=function(){this.translate(-this.camera.x,-this.camera.y),this.gl.bindTexture(this.gl.TEXTURE_2D,null);for(var t=0;t<this.scene.shadowObjects.length;t++){var e=LE.Utilities.sizeFromVerts(this.scene.shadowObjects[t].vertices);LE.Utilities.checkScreenBounds(this.camera.x,this.camera.y,this.gl.viewportWidth,this.gl.viewportHeight,e.width,e.height,this.scene.shadowObjects[t].x,this.scene.shadowObjects[t].y)&&(this.scene.shadowObjects[t]instanceof LE.Texture?this.renderTextureObject(this.scene.shadowObjects,t):this.renderObject(this.scene.shadowObjects,t))}this.translate(this.camera.x,this.camera.y)},LE.WebGLRenderer.prototype.renderLightsAndShadows=function(){this.translate(-this.camera.x,-this.camera.y),this.gl.bindTexture(this.gl.TEXTURE_2D,null),1==this.pointLightShaderSelected?this.shaders.setCurrentShader(this.gl,this.shaders.list[0].program):this.shaders.setCurrentShader(this.gl,this.shaders.list[1].program),this.gl.enable(this.gl.STENCIL_TEST),this.gl.depthMask(!1);for(var t=0;t<this.scene.lights.length;t++){var e=[];this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.REPLACE),this.gl.stencilFunc(this.gl.ALWAYS,1,1),this.gl.colorMask(!1,!1,!1,!1);var s=0;if(null!=this.scene.lights[t].polygonIndex&&(s=this.scene.lights[t].polygonIndex),LE.Utilities.checkScreenBounds(this.camera.x,this.camera.y,this.gl.viewportWidth,this.gl.viewportHeight,500,500,this.scene.lights[t].x,this.scene.lights[t].y)){for(var i=s;i<this.scene.shadowObjects.length&&!(i>s&&null!=this.scene.lights[t].polygonIndex);i++){var h,r,a,n,l;if(this.scene.lights[t].type===LE.Lights.RADIAL_POINT_LIGHT){var o=LE.Utilities.sizeFromVerts(this.scene.shadowObjects[i].vertices);h=this.scene.lights[t].radius+o.width+o.height,r=1,a=this.scene.lights[t].x-(this.scene.shadowObjects[i].x+o.width/2),a*=a,n=this.scene.lights[t].y-(this.scene.shadowObjects[i].y+o.height/2),n*=n,l=Math.sqrt(a+n)}else h=1,r=1,l=1;if(h+r>l){for(var c=[],g=0;g<this.scene.shadowObjects[i].vertices.length;g++)this.scene.shadowObjects[i].vertices.length>4&&g%4==1||c.push({x:this.scene.shadowObjects[i].vertices[g].x+this.scene.shadowObjects[i].x,y:this.scene.shadowObjects[i].vertices[g].y+this.scene.shadowObjects[i].y});for(var d=0;d<c.length;d++){var u=c[d],f=c[(d+1)%c.length],b=LE.Vector2.sub(f,u),L={x:b.y,y:-b.x},m={x:this.scene.lights[t].x,y:this.scene.lights[t].y},E=LE.Vector2.sub(u,m);if(LE.Vector2.dot(L,E)>0){var x=LE.Vector2.add(u,LE.Vector2.scale(500,LE.Vector2.sub(u,m))),v=LE.Vector2.add(f,LE.Vector2.scale(500,LE.Vector2.sub(f,m)));e.push(x.x/this.gl.viewportWidth*this.gl.viewportRatio*2,x.y/this.gl.viewportHeight*2,0,u.x/this.gl.viewportWidth*this.gl.viewportRatio*2,u.y/this.gl.viewportHeight*2,0,v.x/this.gl.viewportWidth*this.gl.viewportRatio*2,v.y/this.gl.viewportHeight*2,0,u.x/this.gl.viewportWidth*this.gl.viewportRatio*2,u.y/this.gl.viewportHeight*2,0,v.x/this.gl.viewportWidth*this.gl.viewportRatio*2,v.y/this.gl.viewportHeight*2,0,f.x/this.gl.viewportWidth*this.gl.viewportRatio*2,f.y/this.gl.viewportHeight*2,0)}}}}this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.scene.shadowBuffers[0]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(e),this.gl.DYNAMIC_DRAW),this.scene.shadowBuffers[0].itemSize=3,this.scene.shadowBuffers[0].numItems=e.length/3,this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.scene.shadowBuffers[0]),this.gl.vertexAttribPointer(this.shaders.selected.vertexPositionAttribute,this.scene.shadowBuffers[0].itemSize,this.gl.FLOAT,!1,0,0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.scene.shadowColourBuffers[0]),this.gl.vertexAttribPointer(this.shaders.selected.vertexColorAttribute,this.scene.shadowColourBuffers[0].itemSize,this.gl.FLOAT,!1,0,0),this.setMatrixUniforms(this.shaders.selected),this.gl.drawArrays(this.gl.TRIANGLES,0,this.scene.shadowBuffers[0].numItems)}if(this.gl.colorMask(!0,!0,!0,!0),LE.Utilities.checkScreenBounds(this.camera.x,this.camera.y,this.gl.viewportWidth,this.gl.viewportHeight,500,500,this.scene.lights[t].x,this.scene.lights[t].y)){this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.KEEP),this.gl.stencilFunc(this.gl.EQUAL,0,1),this.shaders.setCurrentShader(this.gl,this.shaders.list[this.scene.lights[t].shader].program),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE),this.gl.uniform2f(this.gl.getUniformLocation(this.shaders.selected,"lightLocation"),this.scene.lights[t].x-this.camera.x,this.scene.lights[t].y-this.camera.y),this.gl.uniform3f(this.gl.getUniformLocation(this.shaders.selected,"lightColor"),this.scene.lights[t].colour.r*this.scene.lights[t].intensity,this.scene.lights[t].colour.g*this.scene.lights[t].intensity,this.scene.lights[t].colour.b*this.scene.lights[t].intensity),null!=this.scene.lights[t].radius&&this.gl.uniform1f(this.gl.getUniformLocation(this.shaders.selected,"radius"),this.scene.lights[t].radius),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.scene.lightBuffers[this.scene.lights[t].bufferIndex]),this.gl.vertexAttribPointer(this.shaders.selected.vertexColorAttribute,3,this.gl.FLOAT,!1,0,0),this.gl.vertexAttribPointer(this.shaders.selected.vertexPositionAttribute,this.scene.lightBuffers[this.scene.lights[t].bufferIndex].itemSize,this.gl.FLOAT,!1,0,0);var p=LE.Utilities.vertToMatrix(this.gl,this.scene.lights[t].x,this.scene.lights[t].y);this.camera.translate(p.x,p.y,0),this.camera.mvPushMatrix(),null!=this.scene.lights[t].rotation&&this.camera.rotate(LE.Utilities.degToRad(this.scene.lights[t].rotation),0,0,1),this.setMatrixUniforms(this.shaders.selected),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,this.scene.lightBuffers[this.scene.lights[t].bufferIndex].numItems),this.camera.mvPopMatrix(),this.camera.translate(-p.x,-p.y,0),this.gl.disable(this.gl.BLEND),this.gl.clear(this.gl.STENCIL_BUFFER_BIT)}}this.translate(this.camera.x,this.camera.y)},LE.WebGLRenderer.prototype.renderTextureObject=function(t,e){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.scene.objectBuffers[t[e].bufferIndex]),this.gl.vertexAttribPointer(this.shaders.selected.vertexPositionAttribute,this.scene.objectBuffers[t[e].bufferIndex].itemSize,this.gl.FLOAT,!1,0,0),this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.enable(this.gl.BLEND),this.shaders.setCurrentShader(this.gl,this.shaders.list[4].program),this.gl.uniform4f(this.gl.getUniformLocation(this.shaders.selected,"ambientLight"),this.scene.ambientLight.colour.r/255,this.scene.ambientLight.colour.g/255,this.scene.ambientLight.colour.b/255,this.scene.ambientLight.colour.a/255),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.scene.objectTextureBuffers[t[e].bufferIndex]),this.gl.vertexAttribPointer(this.shaders.selected.textureCoordAttribute,this.scene.objectTextureBuffers[t[e].bufferIndex].itemSize,this.gl.FLOAT,!1,0,0),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.scene.textures[t[e].textureIndex]),this.gl.uniform1i(this.shaders.selected.samplerUniform,0);var s=LE.Utilities.vertToMatrix(this.gl,t[e].x,t[e].y),i=LE.Utilities.vertToMatrix(this.gl,t[e].centerPoint.x,t[e].centerPoint.y);this.camera.translate(s.x,s.y,0),this.camera.mvPushMatrix(),this.camera.translate(i.x,i.y,0),this.camera.rotate(LE.Utilities.degToRad(t[e].rotation),0,0,1),this.camera.translate(-i.x,-i.y,0),this.setMatrixUniforms(this.shaders.selected),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,this.scene.objectBuffers[t[e].bufferIndex].numItems),this.camera.mvPopMatrix(),this.camera.translate(-s.x,-s.y,0),this.gl.disable(this.gl.BLEND)},LE.WebGLRenderer.prototype.renderObject=function(t,e){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.scene.objectBuffers[t[e].bufferIndex]),this.gl.vertexAttribPointer(this.shaders.selected.vertexPositionAttribute,this.scene.objectBuffers[t[e].bufferIndex].itemSize,this.gl.FLOAT,!1,0,0),this.shaders.setCurrentShader(this.gl,this.shaders.list[3].program),this.gl.uniform4f(this.gl.getUniformLocation(this.shaders.selected,"ambientLight"),this.scene.ambientLight.colour.r/250,this.scene.ambientLight.colour.g/255,this.scene.ambientLight.colour.b/255,this.scene.ambientLight.colour.a/255),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.scene.objectColourBuffers[t[e].bufferIndex]),this.gl.vertexAttribPointer(this.shaders.selected.vertexColorAttribute,this.scene.objectColourBuffers[t[e].bufferIndex].itemSize,this.gl.FLOAT,!1,0,0);var s=LE.Utilities.vertToMatrix(this.gl,t[e].x,t[e].y),i=LE.Utilities.vertToMatrix(this.gl,t[e].centerPoint.x,t[e].centerPoint.y);this.camera.translate(s.x,s.y,0),this.camera.mvPushMatrix(),this.camera.translate(i.x,i.y,0),this.camera.rotate(LE.Utilities.degToRad(t[e].rotation),0,0,1),this.camera.translate(-i.x,-i.y,0),this.setMatrixUniforms(this.shaders.selected),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,this.scene.objectBuffers[t[e].bufferIndex].numItems),this.camera.mvPopMatrix(),this.camera.translate(-s.x,-s.y,0),this.gl.disable(this.gl.BLEND)};
LE.Scene=function(t){null==t&&(t={}),this.gl,this.lights=[],this.shadowObjects=[],this.objects=[],this.ambientLight=t.ambientLight||new LE.AmbientLight(new LE.Colour(255,255,255,255)),this.textures=[],this.objectBuffers=[],this.objectColourBuffers=[],this.objectTextureBuffers=[],this.lightBuffers=[],this.shadowBuffers=[],this.shadowColourBuffers=[]},LE.Scene.prototype.init=function(t){this.gl=t,this.initBuffers(),this.initTextures()},LE.Scene.prototype.initBuffers=function(t){for(var e=0;e<this.shadowObjects.length;e++)this.shadowObjects[e]instanceof LE.Texture?this.initTextureBuffer(this.shadowObjects,e):this.initPolygonBuffer(this.shadowObjects,e);for(var i=0;i<this.objects.length;i++)this.shadowObjects[i]instanceof LE.Texture?this.initTextureBuffer(this.objects,i):this.initPolygonBuffer(this.objects,i);this.shadowColourBuffers[0]=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.shadowColourBuffers[0]),colors=[];for(var s=0;1e4>s;s++)colors=colors.concat([1,1,1,.5]);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(colors),this.gl.STATIC_DRAW),this.shadowColourBuffers[0].itemSize=4,this.shadowColourBuffers[0].numItems=1e4,this.shadowBuffers[0]=this.gl.createBuffer();for(var r=0;r<this.lights.length;r++)this.initLightBuffer(this.lights,r)},LE.Scene.prototype.initTextureBuffer=function(t,e){for(var i=LE.Utilities.sizeFromVerts(t[e].renderVerts),s=e;s>=0;s--){var r=LE.Utilities.sizeFromVerts(t[s].renderVerts);if(t[e]!=t[s]&&t[e].renderVerts.length==t[s].renderVerts.length&&i.width==r.width&&i.height==r.height)t[e].bufferIndex=t[s].bufferIndex;else if(0==s){t[e].bufferIndex=this.objectBuffers.length,this.objectBuffers[this.objectBuffers.length]=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.objectBuffers[t[e].bufferIndex]);var h=[];h=[LE.Utilities.toMatrix(this.gl,i.width,!0),LE.Utilities.toMatrix(this.gl,i.height,!1),0,0,LE.Utilities.toMatrix(this.gl,i.height,!1),0,LE.Utilities.toMatrix(this.gl,i.width,!0),0,0,0,0,0],this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(h),this.gl.STATIC_DRAW),this.objectBuffers[t[e].bufferIndex].itemSize=3,this.objectBuffers[t[e].bufferIndex].numItems=h.length/3,this.objectTextureBuffers[t[e].bufferIndex]=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.objectTextureBuffers[t[e].bufferIndex]);var o=[1,1,0,1,1,0,0,0];this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(o),this.gl.STATIC_DRAW),this.objectTextureBuffers[t[e].bufferIndex].itemSize=2,this.objectTextureBuffers[t[e].bufferIndex].numItems=4}}},LE.Scene.prototype.comparePolygons=function(t,e){if(t!=e){if(t.renderVerts.length!=e.renderVerts.length)return!1;for(var i=0;i<t.renderVerts.length;i++)if(t.renderVerts[i].x!=e.renderVerts[i].x||t.renderVerts[i].y!=e.renderVerts[i].y)return!1;if(null==e.colour)return!0;if(t.colour.r==e.colour.r&&t.colour.g==e.colour.g&&t.colour.b==e.colour.b&&t.colour.a==e.colour.a)return!0}return!1},LE.Scene.prototype.initPolygonBuffer=function(t,e){for(var i=e;i>=0;i--){if(this.comparePolygons(t[e],t[i])){t[e].bufferIndex=t[i].bufferIndex;break}if(0==i){t[e].bufferIndex=this.objectBuffers.length,this.objectBuffers[this.objectBuffers.length]=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.objectBuffers[t[e].bufferIndex]);for(var s=[],r=0;r<t[e].renderVerts.length;r++)s.push(LE.Utilities.toMatrix(this.gl,t[e].renderVerts[r].x,!0),LE.Utilities.toMatrix(this.gl,t[e].renderVerts[r].y,!1),0);s.push(LE.Utilities.toMatrix(this.gl,t[e].renderVerts[0].x,!0)),s.push(LE.Utilities.toMatrix(this.gl,t[e].renderVerts[0].y,!1)),s.push(0),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(s),this.gl.STATIC_DRAW),this.objectBuffers[t[e].bufferIndex].itemSize=3,this.objectBuffers[t[e].bufferIndex].numItems=s.length/3,this.objectColourBuffers[t[e].bufferIndex]=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.objectColourBuffers[t[e].bufferIndex]),colors=[];for(var h=0;h<s.length;h++)colors=colors.concat([t[e].colour.r/255,t[e].colour.g/255,t[e].colour.b/255,t[e].colour.a/255]);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(colors),this.gl.STATIC_DRAW),this.objectColourBuffers[t[e].bufferIndex].itemSize=4,this.objectColourBuffers[t[e].bufferIndex].numItems=s.length/3}}},LE.Scene.prototype.initTextures=function(){for(var t=0;t<this.shadowObjects.length;t++)this.shadowObjects[t]instanceof LE.Texture&&this.assignTextureIndices(this.shadowObjects,t);for(var e=0;e<this.objects.length;e++)this.shadowObjects[e]instanceof LE.Texture&&this.assignTextureIndices(this.objects,e)},LE.Scene.prototype.assignTextureIndices=function(t,e){for(var i=this,s=!0,r=0;r<this.textures.length;r++){var h=this.gl.createTexture();if(h.image=new Image,h.image.src=t[e].textureURL,h.image.src==this.textures[r].image.src){t[e].textureIndex=r,s=!1;break}}if(1==s){var o=this.gl.createTexture();this.textures.push(o),this.textures[this.textures.length-1].image=new Image,this.textures[this.textures.length-1].image.onload=function(){for(var t=0;t<i.textures.length;t++)if(0==i.textures[t].hasLoaded){i.handleLoadedTexture(i.textures[t]);break}},this.textures[this.textures.length-1].image.src=t[e].textureURL,this.textures[this.textures.length-1].hasLoaded=!1,t[e].textureIndex=this.textures.length-1}},LE.Scene.prototype.handleLoadedTexture=function(t){this.gl.bindTexture(this.gl.TEXTURE_2D,t),this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,!0),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,t.image),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST),this.gl.generateMipmap(this.gl.TEXTURE_2D),this.gl.bindTexture(this.gl.TEXTURE_2D,null),t.hasLoaded=!0},LE.Scene.prototype.initLightBuffer=function(t,e){for(var i=e;i>=0;i--){if(t[e]!=t[i]&&t[e].type===t[i].type){t[e].bufferIndex=t[i].bufferIndex;break}if(0==i)if(t[e].bufferIndex=this.lightBuffers.length,this.lightBuffers[this.lightBuffers.length]=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.lightBuffers[t[e].bufferIndex]),t[e].type===LE.Lights.POINT_LIGHT||t[e].type===LE.Lights.RADIAL_POINT_LIGHT)vertices=[LE.Utilities.toMatrix(this.gl,5*this.gl.viewportWidth,!0),LE.Utilities.toMatrix(this.gl,5*this.gl.viewportHeight,!1),0,LE.Utilities.toMatrix(this.gl,5*-this.gl.viewportWidth,!0),LE.Utilities.toMatrix(this.gl,5*this.gl.viewportHeight,!1),0,LE.Utilities.toMatrix(this.gl,5*this.gl.viewportWidth,!0),LE.Utilities.toMatrix(this.gl,5*-this.gl.viewportHeight,!1),0,LE.Utilities.toMatrix(this.gl,5*-this.gl.viewportWidth,!0),LE.Utilities.toMatrix(this.gl,5*-this.gl.viewportHeight,!1),0],this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(vertices),this.gl.DYNAMIC_DRAW),this.lightBuffers[t[e].bufferIndex].itemSize=3,this.lightBuffers[t[e].bufferIndex].numItems=4;else if(t[e].type===LE.Lights.DIRECTIONAL_LIGHT){var s=t[e].range,r=LE.Utilities.degToRad(s/2),h=2e5,o=Math.round(0+h*Math.cos(r)),f=Math.round(0+h*Math.sin(r));r=LE.Utilities.degToRad(-s/2);var n=Math.round(0+h*Math.cos(r)),l=Math.round(0+h*Math.sin(r));vertices=[0,0,0,LE.Utilities.toMatrix(this.gl,o,!0),LE.Utilities.toMatrix(this.gl,f,!1),0,LE.Utilities.toMatrix(this.gl,n,!0),LE.Utilities.toMatrix(this.gl,l,!1),0],this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(vertices),this.gl.DYNAMIC_DRAW),this.lightBuffers[t[e].bufferIndex].itemSize=3,this.lightBuffers[t[e].bufferIndex].numItems=3}}},LE.Scene.prototype.addLight=function(t){(t instanceof LE.PointLight||t instanceof LE.DirectionalLight||t instanceof LE.RadialPointLight)&&(this.lights.push(t),null!=this.gl&&this.initLightBuffer(this.lights,this.lights.length-1))},LE.Scene.prototype.addShadowObject=function(t){t instanceof LE.Texture?(this.shadowObjects.push(t),null!=this.gl&&(this.initTextureBuffer(this.shadowObjects,this.shadowObjects.length-1),this.assignTextureIndices(this.shadowObjects,this.shadowObjects.length-1))):t instanceof LE.Polygon&&(this.shadowObjects.push(t),null!=this.gl&&this.initPolygonBuffer(this.shadowObjects,this.shadowObjects.length-1))},LE.Scene.prototype.addObject=function(t){t instanceof LE.Texture?(this.objects.push(t),null!=this.gl&&(this.initTextureBuffer(this.objects,this.objects.length-1),this.assignTextureIndices(this.objects,this.objects.length-1))):t instanceof LE.Polygon&&(this.objects.push(t),null!=this.gl&&this.initPolygonBuffer(this.objects,this.objects.length-1))},LE.Scene.prototype.removeLight=function(t){(t instanceof LE.PointLight||t instanceof LE.DirectionalLight||t instanceof LE.RadialPointLight)&&this.removeObjectAndBuffer(t,this.lights,[this.lightBuffers])},LE.Scene.prototype.removeShadowObject=function(t){(t instanceof LE.Texture||t instanceof LE.Polygon)&&this.removeObjectAndBuffer(t,this.shadowObjects,[this.objectBuffers,this.objectColourBuffers])},LE.Scene.prototype.removeObject=function(t){(t instanceof LE.Texture||t instanceof LE.Polygon)&&this.removeObjectAndBuffer(t,this.objects,[this.objectBuffers,this.objectColourBuffers])},LE.Scene.prototype.removeObjectAndBuffer=function(t,e,i){for(var s=0,r=0;r<e.length;r++)if(t!=e[r]&&t.bufferIndex==e[r].bufferIndex){s++;break}if(0==s){for(var r=0;r<e.length;r++)e[r].bufferIndex>t.bufferIndex&&e[r].bufferIndex--;for(var h=0;h<i.length;h++)i[h].splice(t.bufferIndex,1)}for(var r=0;r<e.length;r++)if(e[r]==t){e.splice(r,1);break}};